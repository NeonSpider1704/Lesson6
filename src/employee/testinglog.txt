Testing Theory
==============

There are many goals to achieve when testing a program:

1) Complete Code Coverage
-------------------------
- not every line of code in a program runs every time. The goal of 
complete code coverage is to test enough times to ensure every line 
gets executed (run) at least once.

2) Testing Boundary Conditions
------------------------------
-use data that falls right around the limits of certain boundaries
-Ex -> just below, just at and just above particular requirements 
found is loops and if statements

3) Testing Extreme Conditions
-----------------------------
- Use data that falls very far outside the required limits
- Ex -> try paying employee $1000 / hour or 200 hours of work
- ensure that program responds appropriately to this data

4) Testing Efficiency
---------------------
- We want to avoid using data sets that take us down identical paths
of execution in the code. Once the area is tested we don't need further
data that tests the same thing

Equivalence Class(Category) - When 2 sets of data follow the same path
in a program, they belong to the same equivalence class
Ex -> Type 1 50 hours   Type 1 employee 48 hours


Testing Log 
===========

Test #              Description                                 Expected                    Result
======              ===========                                 ========                    ======
1(Code Coverage)    Rate:10,Type:1,Hours:30                     300                         300
2(Code Coverage)    Rate:10,Type:1,Hours:50                     400+200=600                 600

3(Boundary)         Rate:10,Type:1,Hours:39,40,41               OT only for 41              390,400,420

4(Extreme)          Rate:10,Type:1,Hours:0 and 168              Hours not set               Hours not set

5(Boundary)         Rate:6.49,6.50,30.50,30.51,Type:1,Hours:10  Rate only set for #2,3      Only #2 & 3
6(Boundary)         Rate:10,Type:2,Hours:0,1,60,61              Hours only set for #2,3     Only #2 & 3
7(Boundary)         Rate:10,Type:0,1,2,3,Hours:45               Type only set for #2,3      Only #2 & 3